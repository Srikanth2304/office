logWriter.println("GrafanaTest: headerParameters: "+"headerParameters"+"##" +new java.sql.Time(startTime)+"#"+"O"+"#"+"-"+"#"+"-"+"#"+"-"+"#"+"APIServices"+"#"+"-"+"#"+timeTaken+"#"+"-"+"#"+"#"+""+request.getMethod() +"/"+ request.getRequestURI() +"/ " + request.getQueryString() + "companyID:" + company_ID +" messageSender: "+message_Sender+" errorDescription: "+errorDescription+"Response Status: "+response.getStatus()+"Response StatusCode: "+response.getStatusCode()+"uetrKey: "+uetrKey);
            	 try{
     				if(isMointorLoggingEnabled() ){
     					logWriter.println("Before Calling isMointorLoggingEnabled>>>> ");
                Map<String, String> map = new HashMap<>();
                map.put("GrafanaTest", "headerParameters"); 
                map.put("startTime",  new java.sql.Time(startTime).toString()); 
                map.put("typeofTrn", "O"); 
                map.put("timeTaken", Long.toString(timeTaken)); 
                map.put("getMethod", request.getMethod()); 
                map.put("getRequestURI", request.getRequestURI());
                map.put("getQueryString", request.getQueryString());
                map.put("company_ID", company_ID);
                map.put("message_Sender", message_Sender);
                map.put("errorDescription", errorDescription);
                map.put("getStatus", Integer.toString(response.getStatus()));
                map.put("getStatusCode", Integer.toString(response.getStatusCode()));
                String json = jsonLogWriter.mapToJson(map);
                logJson.printGrafanaLog(json);
				logWriter.println("Grafana-JSON Converter check ends:"+json);
     				}
     				}catch(Exception e){
                     	logWriter.println("isMointorLoggingEnabled >>>>"+e);
                     }

private boolean isMointorLoggingEnabled() {
		LogWriter out = LogWriter.getInstance("RequestAndResponseLoggingFilter", "isMointorLoggingEnabled");
		boolean monitorLog = false;
		out.println("inside isMointorLoggingEnabled >>> ");
		if ((SCBPARAMCache.getInstance().getCache("ENABLE_MOINTOR_LOGGING") != null)
				&& (SCBPARAMCache.getInstance().getCache("ENABLE_MOINTOR_LOGGING").trim()
						.equals("Y"))) {
			monitorLog = true;
			out.println("return value >>> " + monitorLog);
		}
		return monitorLog;
	}



[3/6/2025#13:23:32:004] #API#RequestAndResponseLoggingFilter#NA#NA#NA#-#HK#default task-1#HK_eBBSINT_01##GrafanaTest: headerParameters: headerParameters##13:23:29#O#-#-#-#APIServices#-#2606#-##POST//rcb-api/rcb/api/v1/create-casas/ nullcompanyID:HK messageSender: RTOB errorDescription: ##Response Status: 201Response StatusCode: 201uetrKey: null
[3/6/2025#13:23:32:004] #API#RequestAndResponseLoggingFilter#NA#NA#NA#-#HK#default task-1#HK_eBBSINT_01##Before Calling isMointorLoggingEnabled>>>>
[3/6/2025#13:23:32:005] #API#RequestAndResponseLoggingFilter#NA#NA#NA#-#HK#default task-1#HK_eBBSINT_01##isMointorLoggingEnabled >>>>java.lang.NullPointerException
[3/6/2025#13:23:34:104] #ALERTREQMSG#ejbTimeout#NA#NA#NA#-#HK#EJB default-timer - 1#HK_eBBSINT_01##[3/6/2025#13:23:34:104] #O#-#-#-#ALERTCHNL#-#-#2419#-#ALERT#-#eBBS#-
