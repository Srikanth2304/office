package com.sc.wrb.service;

import com.sc.wrb.dto.FormData;
import com.sc.wrb.dto.FormDataUpsertRequest;
import com.sc.wrb.service.inter.FormDataService;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

@Service
public class FormDataServiceImpl implements FormDataService {

    @PersistenceContext
    private EntityManager entityManager;

    @Override
    public List<FormData> getFormDataById(String txrefno) {
        try {
            List<Object[]> resultList = entityManager.createNativeQuery(
                    "SELECT u.txrefno, u.key, u.value FROM ftdmasterkeyvalue u WHERE u.txrefno = :txrefno")
                    .setParameter("txrefno", txrefno)
                    .getResultList();

            return resultList.stream().map(row -> {
                FormData formData = new FormData();
                formData.setTxrefno((String) row[0]);
                formData.setId((String) row[1]);
                formData.setValue(row[2] != null ? (String) row[2] : "");
                return formData;
            }).collect(Collectors.toList());
        } catch (Exception e) {
            // Optionally log the error
            System.err.println("Error in getFormDataById: " + e.getMessage());
            return new ArrayList<>();
        }
    }

    @Override
    public void upsertFormData(FormDataUpsertRequest request) {
        try {
            String txrefno = request.getTxrefno();
            String stepname = request.getStepname();

            for (FormData data : request.getData()) {
                String key = data.getId();
                String value = data.getValue();

                try {
                    List<Object[]> result = entityManager.createNativeQuery(
                            "SELECT value FROM ftdmasterkeyvalue WHERE txrefno = :txrefno AND key = :key")
                            .setParameter("txrefno", txrefno)
                            .setParameter("key", key)
                            .getResultList();

                    if (result.isEmpty()) {
                        // Insert new record
                        entityManager.createNativeQuery(
                                "INSERT INTO ftdmasterkeyvalue (txrefno, key, value, stepname) VALUES (:txrefno, :key, :value, :stepname)")
                                .setParameter("txrefno", txrefno)
                                .setParameter("key", key)
                                .setParameter("value", value)
                                .setParameter("stepname", stepname)
                                .executeUpdate();
                    } else {
                        String existingValue = (String) result.get(0)[0];
                        if (!existingValue.equals(value)) {
                            // Update value and stepname
                            entityManager.createNativeQuery(
                                    "UPDATE ftdmasterkeyvalue SET value = :value, stepname = :stepname WHERE txrefno = :txrefno AND key = :key")
                                    .setParameter("value", value)
                                    .setParameter("stepname", stepname)
                                    .setParameter("txrefno", txrefno)
                                    .setParameter("key", key)
                                    .executeUpdate();
                        }
                    }
                } catch (Exception e) {
                    // Log and continue with next record
                    System.err.println("Error processing key '" + key + "': " + e.getMessage());
                }
            }
        } catch (Exception e) {
            // Handle unexpected top-level errors
            System.err.println("Error in upsertFormData: " + e.getMessage());
        }
    }
}
