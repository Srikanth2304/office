package scb.util;

import java.util.Map;

public class JsonLogWriter {
	
	public String mapToJson(Map<String, String> map) {
        StringBuilder jsonBuilder = new StringBuilder();
        jsonBuilder.append("{");
        int mapSize = map.size();
        int count = 0;

        for (Map.Entry<String, String> entry : map.entrySet()) {
            jsonBuilder.append("\"")
                        .append(entry.getKey())
                        .append("\": ");
            String value = entry.getValue();
            
            
            if (isJson(value)) {
                jsonBuilder.append(value); 
            } else {
                jsonBuilder.append("\"")
                            .append(value)
                            .append("\""); 
            }

            if (count < mapSize - 1) {
                jsonBuilder.append(", ");
            }
            count++;
        }

        jsonBuilder.append("}");
        return jsonBuilder.toString();
    }
	
	public boolean isJson(String value) {
        value = value.trim();
        return (value.startsWith("{") && value.endsWith("}")) || 
               (value.startsWith("[") && value.endsWith("]"));
    }




@Test
	public void getrequestinfo_test() throws Exception {
		try {
			new NonStrictExpectations() {
			};
			Deencapsulation.invoke(logWriter, "getRequestInfo");
			Assert.assertTrue(true);
		} catch (Exception exObj) {
			Assert.assertTrue(true);
		}
	}


}











........






package scb.util;

import org.junit.Test;
import org.junit.Assert;
import java.util.HashMap;
import java.util.Map;

public class JsonLogWriterTest {

    @Test
    public void mapToJson_test() {
        JsonLogWriter logWriter = new JsonLogWriter();
        Map<String, String> map = new HashMap<>();
        map.put("key1", "value1");
        map.put("key2", "{\"nestedKey\": \"nestedValue\"}");
        
        String json = logWriter.mapToJson(map);
        Assert.assertNotNull(json);
    }

    @Test
    public void isJson_test() {
        JsonLogWriter logWriter = new JsonLogWriter();
        Assert.assertTrue(logWriter.isJson("{\"key\": \"value\"}"));
        Assert.assertFalse(logWriter.isJson("plain text"));
    }
}
