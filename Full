For retracking the data of a transaction , of the 10 years old or more than that 
if user want to block a credit card then for blocking it we have to open 10 appications , so we have go thorough all these applications for blocking the card
in order , when he is in the last application session timeout is happening for the remaining application , so main point is why should i login to all these applications
for doing one thing, then this service bench concept came into picture. plan is all the systems needed for ops user should be onboared to service bench.

so ops user will login single time , in service bench plugin is a applicatin like eops , core banking ,building server . 


about graphql

experience api : what is experince , so there is a card blocking system is a feature  , any only can use this feature in bank like epos can use today , other team can use tommorow
here there are 2 systems , in bank for blocking debit card you should go to euronet , for credit card blocking should go to CCMS. here euro net and ccms are process apis
euro net system , will desgin there process api , respectivley other systems also create there process apis.
here you hit my system there oltp (means there DB)  i will expose you one api .this where busness logic will servive for card blocking .

for my application eops if want to block a card i will go euronet -> debit , ccms -> credit , for corebanking they will write there experience api and says either 
debit or credit card go and hit ccms , so what happens here he will use ccms process api .here major concept is function as a service  
now what we are doing we are exposing our process api for workflow trigger or some other functionality.this is our expericence api , tommorow we can conncect to 
to another systems process api. so our plugin is tightly coupled to our experience api , in turn our expericence api can connect to n numbers of process apis , that is 
waht this design is about .as you can see in image every  experience api is connected all process apis.one of the expericence will be ours and reads the plugin
. for now card block is a functionality which is desgined as experiecne api , here these should logic for connecting to respective process api and response reading logic 
only should be there. thats it no other logic should be there only routing logic should be there .process api actual logic.
now on our eops experience api , if we want data we are taking from eops process api , for workflow we are hitting atom .atom has exposed there separate process api
for bringing this they desinged service bench.

