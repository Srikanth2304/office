import React, { useState } from 'react';
import '@scdevkit/form/elements/form-editor.js';

const HomeContent = () => {
  const [processId, setProcessId] = useState('');
  const [stepName, setStepName] = useState('');
  const [loading, setLoading] = useState(false);

  // Handle fetch
  const handleFetch = async () => {
    const editor = document.querySelector('sc-form-editor');
    if (!processId || !stepName) {
      alert('Please enter both Process ID and Step Name.');
      return;
    }

    try {
      setLoading(true);
      const query = `
        query {
          getStepFormMappingById(processid: "${processId}", stepname: "${stepName}") {
            processId
            stepName
            form
          }
        }
      `;

      const response = await fetch('/graphql', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ query }),
      });

      const result = await response.json();
      const data = result.data?.getStepFormMappingById;

      const editorData = data?.form && !data.form.includes('No form data')
        ? JSON.parse(data.form)
        : {};

      editor.setValue(editorData);
      alert(data?.form?.includes('No form data') ? 'No draft found. Loaded empty form.' : 'Draft loaded successfully.');
    } catch (error) {
      console.error('Error fetching draft:', error);
      alert('Failed to fetch form.');
    } finally {
      setLoading(false);
    }
  };

  // Handle save
  const handleSave = async () => {
    const editor = document.querySelector('sc-form-editor');
    if (!editor || !processId || !stepName) {
      alert('Please enter both Process ID and Step Name.');
      return;
    }

    try {
      const formString = JSON.stringify(editor.getValue());
      const mutation = `
        mutation {
          saveStepFormDefinition(
            processId: "${processId}",
            stepName: "${stepName}",
            form: """${formString.replace(/"/g, '\\"')}"""
          )
        }
      `;

      const response = await fetch('/graphql', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ query: mutation }),
      });

      const result = await response.json();
      alert(result.data?.saveStepFormDefinition ? 'Form saved successfully!' : 'Failed to save form.');
    } catch (error) {
      console.error('Error saving form:', error);
      alert('Error while saving. Please try again.');
    }
  };

  return (
    <>
      {/* Top Controls */}
      <div
        style={{
          display: 'flex',
          padding: '20px 30px',
          gap: '16px',
          alignItems: 'flex-end',
          flexWrap: 'wrap',
        }}
      >
        {/* Process ID Field */}
        <div>
          <sc-text-input
            label="Process ID"
            placeholder="Enter Process ID"
            size="md"
            border-type="box"
            value={processId}
            onInput={(e) => setProcessId(e.target.value)}
          ></sc-text-input>
        </div>

        {/* Step Name Field */}
        <div>
          <sc-text-input
            label="Step Name"
            placeholder="Enter Step Name"
            size="md"
            border-type="box"
            value={stepName}
            onInput={(e) => setStepName(e.target.va
