Experience API is layer sittings between client (e.g. mobile, web app) and each domain's process API. Tailored for the user experience, this component delivers data and functionalities to a client. They cater to external consumption like mobile apps and partner systems, or internal applications like web interfaces and dashboards. The Experience API should be thin and light weight, contains no business logic. 

Key characteristics of experience API are:

Develop and deploy based on Function as a Service framework
Out of box common libraries from SC DevKit
GraphQL or REST API as experience API
CICD integration with ADO 
Authentication and authorization leveraging SC-IDP policy enforcement point common library and sidecar
Automatic integration to COP


4. Experience API vs Process API
Information below extracted from API Function Design and Standards 

Definition	APIs tailored for the user experience, this component delivers data and functionalities to a client. They cater to external consumption like mobile apps and partner systems, or internal applications like web interfaces and dashboards.	APIs which act as an intermediary and abstraction layer, facilitating communication between the Experience API and OLTP systems. This component represents either a business process or data resource and may support operations like data manipulation, aggregation, and orchestration across various systems within its domain.
Attributes	
Thin and light weight
No Business Logic
Standard API contracts
High degree of composability and reusability
Business Logic


5.1 Thin and light weight
Minimal data processing
The API should primarily act as a data aggregator and facilitator, minimizing any heavy data processing
Leverage process API for data transformation and complex calculations, passing only necessary data to the experience API
Efficient data transfer 
Use efficient data formats such as JSON to reduce the size of data payloads
Implement techniques such as pagination, filtering and field selection to allow client to request only the data they need, minimizing data transfer
Optimized network usage
Minimize the number of network requests by aggregating multiple data sources into single responses where possible
5.2 No business logic
The experience API should strictly void containing any business logic, ensuring that it remains focused on its core role of data delivery and presentation
Separation of concerns
Delegate business logic to process API where it belongs, keeping the experience API free from complex decision-making processes
Ensure that the API only coordinates data flow between the frontend and the process API, acting as a transparent layer
5.3 Optimized for UI
Tailored responses
Structure API response to match the requirements of the UI, ensuring that data is formatted and delivered in a way that reduces the need for further manipulation on the client side
Provide endpoints that deliver precisely the data needed for specific views or components, avoiding over-fetching
Low latency
Optimize the API for low latency to ensure quick data retrieval
User-centric data delivery - support adaptive data delivery, where the API can return different levels of details based on the client's capabilities (e.g. mobile vs desktop)






3. What is Process API
Process API Acts as an intermediary and abstraction layer, facilitating communication between the Experience API and OLTP systems. This component represents either a business process or data resource and may support operations like data manipulation, aggregation, and orchestration across various systems within its domain.

Process API could be your existing headless system running on your own infrastructure. If you are building a green field project, you could choose service bench Process API running on FaaS platform.

Key characteristics of process API are:

Develop and deploy based on Function as a Service framework
Out of box common libraries from SC DevKit
CICD integration with ADO 
Authentication and authorization leveraging SC-IDP policy enforcement point common library and sidecar
Automatic integration to COP
