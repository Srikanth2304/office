import React, { useState } from 'react';

const Enquiry = () => {
  const [processId, setProcessId] = useState('');
  const [countryCode, setCountryCode] = useState('');
  const [caseId, setCaseId] = useState('');
  const [isValidated, setIsValidated] = useState(false);
  const [tableData, setTableData] = useState([]);
  const [columns, setColumns] = useState([]);

  const validateProcess = () => {
    if (processId && countryCode) {
      setIsValidated(true);
    } else {
      alert('Please enter both Process ID and Country Code.');
    }
  };

  const resetForm = () => {
    setProcessId('');
    setCountryCode('');
    setCaseId('');
    setIsValidated(false);
    setTableData([]);
    setColumns([]);
  };

  const searchData = () => {
    const formDataJson = `{
      "field1": "value1",
      "field2": "value2",
      "field3": "value3",
      "field4": "value4",
      "field5": "value5",
      "field6": "value6",
      "field7": "value7",
      "field8": "value8",
      "field9": "value9",
      "field10": "value10",
      "field11": "value11",
      "field12": "value12",
      "field13": "value13"
    }`;

    const data = JSON.parse(formDataJson);
    const dataArray = [data];
    const columnDefs = Object.keys(data).map(key => ({
      property: key,
      header: key,
      minSize: 100
    }));

    setTableData(dataArray);
    setColumns(columnDefs);
  };

  const handleKeyDown = (e) => {
    if (e.key === 'Enter') {
      searchData();
    }
  };

  return (
    <div style={{ padding: '20px' }}>
      {/* Process ID & Country Code Row */}
      <div style={{ display: 'flex', alignItems: 'center', gap: '16px', marginBottom: '16px', flexWrap: 'wrap' }}>
        <div>
          <label>Process ID</label><br />
          <input
            type="text"
            value={processId}
            onChange={(e) => setProcessId(e.target.value)}
            style={{
              width: '180px',
              padding: '8px',
              border: '1px solid #68ABF2',
              borderRadius: '6px'
            }}
          />
        </div>

        <div>
          <label>Country Code</label><br />
          <input
            type="text"
            value={countryCode}
            onChange={(e) => setCountryCode(e.target.value)}
            style={{
              width: '180px',
              padding: '8px',
              border: '1px solid #68ABF2',
              borderRadius: '6px'
            }}
          />
        </div>

        <sc-button onClick={validateProcess} type="primary" size="sm">Validate</sc-button>
        <sc-button onClick={resetForm} type="primary" size="sm">Reset</sc-button>
      </div>

      {/* Case ID Row */}
      {isValidated && (
        <div style={{ display: 'flex', alignItems: 'center', gap: '16px', marginBottom: '16px', flexWrap: 'wrap' }}>
          <div>
            <label>Case ID</label><br />
            <input
              type="text"
              value={caseId}
              onChange={(e) => setCaseId(e.target.value)}
              onKeyDown={handleKeyDown}
              style={{
                width: '180px',
                padding: '8px',
                border: '1px solid #68ABF2',
                borderRadius: '6px'
              }}
            />
          </div>

          <sc-button onClick={searchData} type="primary" size="sm">Search</sc-button>
        </div>
      )}

      {/* Data Grid Box */}
      {tableData.length > 0 && (
        <div style={{
          border: '1px solid #ccc',
          borderRadius: '6px',
          padding: '10px',
          overflowX: 'auto'
        }}>
          <sc-data-grid
            .data={tableData}
            .columns={columns}
            style="width: 100%; overflow-x: auto"
          ></sc-data-grid>
        </div>
      )}
    </div>
  );
};

export default Enquiry;
