import React, { useState } from 'react';

const Enquiry = () => {
  const [processId, setProcessId] = useState('');
  const [countryCode, setCountryCode] = useState('');
  const [caseId, setCaseId] = useState('');
  const [isValidated, setIsValidated] = useState(false);
  const [tableData, setTableData] = useState([]);

  const validateProcess = () => {
    // Dummy validation: Allow if values exist
    if (processId && countryCode) {
      setIsValidated(true);
    } else {
      alert('Please enter Process ID and Country Code');
    }
  };

  const resetForm = () => {
    setProcessId('');
    setCountryCode('');
    setCaseId('');
    setIsValidated(false);
    setTableData([]);
  };

  const searchData = () => {
    // Dummy JSON string to simulate database response
    const formDataJson = `{
      "field1": "value1",
      "field2": "value2",
      "field3": "value3",
      "field4": "value4",
      "field5": "value5",
      "field6": "value6",
      "field7": "value7",
      "field8": "value8",
      "field9": "value9",
      "field10": "value10",
      "field11": "value11",
      "field12": "value12",
      "field13": "value13"
    }`;

    const data = JSON.parse(formDataJson);
    const row = {};
    const columns = [];

    Object.entries(data).forEach(([key, value]) => {
      row[key] = value;
      columns.push(key);
    });

    setTableData([{ ...row }]);
  };

  const handleKeyDown = (e) => {
    if (e.key === 'Enter') {
      searchData();
    }
  };

  return (
    <div style={{ padding: '20px' }}>
      {/* ProcessID & Country Code Row */}
      <div style={{ display: 'flex', alignItems: 'flex-end', gap: '16px', flexWrap: 'wrap', marginBottom: '20px' }}>
        <div style={{ display: 'flex', flexDirection: 'column' }}>
          <label>Process ID</label>
          <input
            type="text"
            value={processId}
            onChange={(e) => setProcessId(e.target.value)}
            style={{ width: '250px', padding: '8px', border: '1px solid #68ABF2', borderRadius: '4px' }}
          />
        </div>

        <div style={{ display: 'flex', flexDirection: 'column' }}>
          <label>Country Code</label>
          <input
            type="text"
            value={countryCode}
            onChange={(e) => setCountryCode(e.target.value)}
            style={{ width: '250px', padding: '8px', border: '1px solid #68ABF2', borderRadius: '4px' }}
          />
        </div>

        <button
          onClick={validateProcess}
          style={{
            padding: '8px 16px',
            backgroundColor: '#007BFF',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: 'pointer',
            height: '38px',
          }}
        >
          Validate
        </button>

        <button
          onClick={resetForm}
          style={{
            padding: '8px 16px',
            backgroundColor: '#007BFF',
            color: 'white',
            border: 'none',
            borderRadius: '4px',
            cursor: 'pointer',
            height: '38px',
          }}
        >
          Reset
        </button>
      </div>

      {/* Case ID Row */}
      {isValidated && (
        <div style={{ display: 'flex', alignItems: 'flex-end', gap: '16px', flexWrap: 'wrap', marginBottom: '20px' }}>
          <div style={{ display: 'flex', flexDirection: 'column' }}>
            <label>Case ID</label>
            <input
              type="text"
              value={caseId}
              onChange={(e) => setCaseId(e.target.value)}
              onKeyDown={handleKeyDown}
              style={{ width: '250px', padding: '8px', border: '1px solid #68ABF2', borderRadius: '4px' }}
            />
          </div>

          <button
            onClick={searchData}
            style={{
              padding: '8px 16px',
              backgroundColor: '#007BFF',
              color: 'white',
              border: 'none',
              borderRadius: '4px',
              cursor: 'pointer',
              height: '38px',
            }}
          >
            Search
          </button>
        </div>
      )}

      {/* Table */}
      {tableData.length > 0 && (
        <div style={{ border: '1px solid #ddd', padding: '10px', borderRadius: '6px', overflowX: 'auto' }}>
          <table style={{ borderCollapse: 'collapse', width: '100%' }}>
            <thead>
              <tr>
                {Object.keys(tableData[0]).map((key) => (
                  <th
                    key={key}
                    style={{
                      textAlign: 'left',
                      padding: '8px',
                      borderBottom: '1px solid #ccc',
                      whiteSpace: 'nowrap',
                    }}
                  >
                    {key}
                  </th>
                ))}
              </tr>
            </thead>
            <tbody>
              {tableData.map((row, index) => (
                <tr key={index}>
                  {Object.entries(row).map(([_, value], i) => (
                    <td key={i} style={{ padding: '8px', whiteSpace: 'nowrap' }}>
                      {value}
                    </td>
                  ))}
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default Enquiry;
