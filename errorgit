import React, { useState } from 'react';

const Enquiry = () => {
  // State to hold input values
  const [processId, setProcessId] = useState('');
  const [countryCode, setCountryCode] = useState('');
  const [caseId, setCaseId] = useState('');
  const [formData, setFormData] = useState(null);
  const [isValidated, setIsValidated] = useState(false); // To show caseId input after validation

  // Simulated backend table data for validation and data fetching
  const dummyDB = [
    { caseId: 'SCB1234', processId: 'W409', countryCode: 'ID', formData: '{id:name,value:kiran}' },
    { caseId: '123456', processId: 'W409', countryCode: 'ID', formData: '{"name": "Kiran"}' },
  ];

  // Step 1: Validate Process ID and Country Code
  // If matching record exists in backend (dummyDB here), allow Case ID input
  const validateProcess = () => {
    const exists = dummyDB.some(
      (entry) =>
        entry.processId === processId.trim() &&
        entry.countryCode === countryCode.trim()
    );
    setIsValidated(exists); // Show Case ID input field if valid
    if (!exists) {
      alert('Invalid Process ID or Country Code');
    }
  };

  // Step 2: Search data after entering valid Case ID
  const searchData = () => {
    const record = dummyDB.find(
      (entry) =>
        entry.processId === processId.trim() &&
        entry.countryCode === countryCode.trim() &&
        entry.caseId === caseId.trim()
    );
    if (record) {
      setFormData(record.formData); // Display FORMDATA result
    } else {
      alert('Case ID not found');
      setFormData(null);
    }
  };

  return (
    <div style={{ padding: '20px', fontFamily: 'Arial' }}>
      {/* Process ID and Country Code Input with Validate Button */}
      <div style={{ marginBottom: '10px' }}>
        <label>Process ID: </label>
        <input
          type="text"
          value={processId}
          onChange={(e) => setProcessId(e.target.value)}
          style={{ marginRight: '10px', padding: '5px' }}
        />

        <label>Country Code: </label>
        <input
          type="text"
          value={countryCode}
          onChange={(e) => setCountryCode(e.target.value)}
          style={{ marginRight: '10px', padding: '5px' }}
        />

        {/* Validate button triggers DB check */}
        <button onClick={validateProcess} style={{ padding: '6px 12px' }}>
          Validate
        </button>
      </div>

      {/* Case ID input and Search button shown only after validation */}
      {isValidated && (
        <div style={{ marginBottom: '10px' }}>
          <label>Case ID: </label>
          <input
            type="text"
            value={caseId}
            onChange={(e) => setCaseId(e.target.value)}
            style={{ marginRight: '10px', padding: '5px' }}
          />

          {/* Search button fetches formData if Case ID matches */}
          <button onClick={searchData} style={{ padding: '6px 12px' }}>
            Search
          </button>
        </div>
      )}

      {/* Form Data Output (Result) */}
      {formData && (
        <div style={{ marginTop: '20px' }}>
          <h4>Form Data:</h4>
          <pre style={{ background: '#f4f4f4', padding: '10px' }}>{formData}</pre>
        </div>
      )}
    </div>
  );
};

export default Enquiry;
